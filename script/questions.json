[
    {
        "question": "Which of the following is the correct order of occurrence in a typical SQL statement?",
        "optionA": "SELECT, GROUP BY, WHERE, HAVING.",
        "optionB": "SELECT, WHERE, GROUP BY, HAVING.",
        "optionC": "SELECT, WHERE, HAVING, GROUP BY, SELECT, HAVING, WHERE, GROUP BY",
        "optionD": "SELECT, HAVING, WHERE, GROUP BY.",
        "optionE": "",
        "optionF": "",
        "correct": "optionB"
    },
    {
        "question": "<br><div class='row'><div class='col-lg-6 col-md-12'><table class='table table-bordered'><tr><td colspan='5'><center>STUDENT table</center></td></tr><tr><th>SID</th><th>name</th><th>age</th><th>login</th><th>GPA</th></tr> <tr><td>53666</td><td>Kayne</td><td>A@cs</td><td>28</td><td>4.0</td></tr> <tr><td>53655</td><td>Tupac</td><td>B@cs</td><td>26</td><td>3.5</td></tr> <tr><td>53688</td><td>Bieber</td><td>C@cs</td><td>22</td><td>3.9</td></tr> </table> </div><div class='col-lg-6 col-md-12'> <table class='table table-bordered'><tr><td colspan='3'><center>ENDROLLED table</center></td></tr>  <tr><th>SID</th><th>CID</th><th>grade</th></tr> <tr><td>53666</td><td>15 − 415</td><td> C</td></tr> <tr><td>53688</td><td>15 − 721</td><td>A</td></tr><tr><td>53688</td><td>15 − 826</td><td>B</td></tr><tr><td>53655</td><td>15 − 415</td><td>C</td></tr><tr><td>53666</td><td>15 − 721</td><td>C</td></tr> </table></div></div> <br>Which of the following is the correct outcome of the SQL query:<br><div class='code'>SELECT cid<br>FROM ENROLLED<br>WHERE grade = 'C';</div>",
        "optionA": "Extract the course ids(cid) where student receive the grade C in the course.",
        "optionB": "Extract the unique course ids(cid) where student receive the grade C in the course.",
        "optionC": "Error",
        "optionD": "None of these.",
        "optionE": "",
        "optionF": "",
        "correct": "optionA"
    },
    {
        "question": "<br><div class='row'><div class='col-lg-6 col-md-12'><table class='table table-bordered'><tr><td colspan='5'><center>STUDENT table</center></td></tr><tr><th>SID</th><th>name</th><th>age</th><th>login</th><th>GPA</th></tr> <tr><td>53666</td><td>Kayne</td><td>A@cs</td><td>28</td><td>4.0</td></tr> <tr><td>53655</td><td>Tupac</td><td>B@cs</td><td>26</td><td>3.5</td></tr> <tr><td>53688</td><td>Bieber</td><td>C@cs</td><td>22</td><td>3.9</td></tr> </table> </div><div class='col-lg-6 col-md-12'> <table class='table table-bordered'><tr><td colspan='3'><center>ENDROLLED table</center></td></tr>  <tr><th>SID</th><th>CID</th><th>grade</th></tr> <tr><td>53666</td><td>15 − 415</td><td> C</td></tr> <tr><td>53688</td><td>15 − 721</td><td>A</td></tr><tr><td>53688</td><td>15 − 826</td><td>B</td></tr><tr><td>53655</td><td>15 − 415</td><td>C</td></tr><tr><td>53666</td><td>15 − 721</td><td>C</td></tr> </table></div></div> <br>Which of the following is the correct outcome of the SQL query:<br><div class='code'>SELECT DISTINCT cid<br>FROM ENROLLED<br>WHERE grade = 'C';</div>",
        "optionA": "Extract the course ids where student receive the grade C in the course.",
        "optionB": "Extract the distinct course ids where student receive the grade of C in the course.",
        "optionC": "Error.",
        "optionD": "None of these.",
        "optionE": "",
        "optionF": "",
        "correct": "optionB"
    },
    {
        "question": "<br><div class='row'><div class='col-lg-6 col-md-12'><table class='table table-bordered'><tr><td colspan='5'><center>STUDENT table</center></td></tr><tr><th>SID</th><th>name</th><th>age</th><th>login</th><th>GPA</th></tr> <tr><td>53666</td><td>Kayne</td><td>A@cs</td><td>28</td><td>4.0</td></tr> <tr><td>53655</td><td>Tupac</td><td>B@cs</td><td>26</td><td>3.5</td></tr> <tr><td>53688</td><td>Bieber</td><td>C@cs</td><td>22</td><td>3.9</td></tr> </table> </div><div class='col-lg-6 col-md-12'> <table class='table table-bordered'><tr><td colspan='3'><center>ENDROLLED table</center></td></tr>  <tr><th>SID</th><th>CID</th><th>grade</th></tr> <tr><td>53666</td><td>15 − 415</td><td> C</td></tr> <tr><td>53688</td><td>15 − 721</td><td>A</td></tr><tr><td>53688</td><td>15 − 826</td><td>B</td></tr><tr><td>53655</td><td>15 − 415</td><td>C</td></tr><tr><td>53666</td><td>15 − 721</td><td>C</td></tr> </table></div></div> <br>Which of the following is the correct outcome of the SQL query:<br><div class='code'>SELECT name, cid<br>FROM STUDENT, ENROLLED<br>WHERE STUDENT.sid = ENROLLED.sid AND ENROLLED.grade = ’C’;</div>",
        "optionA": "Returns the name of all students and their corresponding course ids.",
        "optionB": "Returns the name of students and their corresponding course id where they have received grade C.",
        "optionC": "Error.",
        "optionD": "None of these.",
        "optionE": "",
        "optionF": "",
        "correct": "optionB"
    },
    {
        "question": "<br><div class='row'><div class='col-lg-6 col-md-12'><table class='table table-bordered'><tr><td colspan='5'><center>STUDENT table</center></td></tr><tr><th>SID</th><th>name</th><th>age</th><th>login</th><th>GPA</th></tr> <tr><td>53666</td><td>Kayne</td><td>A@cs</td><td>28</td><td>4.0</td></tr> <tr><td>53655</td><td>Tupac</td><td>B@cs</td><td>26</td><td>3.5</td></tr> <tr><td>53688</td><td>Bieber</td><td>C@cs</td><td>22</td><td>3.9</td></tr> </table> </div><div class='col-lg-6 col-md-12'> <table class='table table-bordered'><tr><td colspan='3'><center>ENDROLLED table</center></td></tr>  <tr><th>SID</th><th>CID</th><th>grade</th></tr> <tr><td>53666</td><td>15 − 415</td><td> C</td></tr> <tr><td>53688</td><td>15 − 721</td><td>A</td></tr><tr><td>53688</td><td>15 − 826</td><td>B</td></tr><tr><td>53655</td><td>15 − 415</td><td>C</td></tr><tr><td>53666</td><td>15 − 721</td><td>C</td></tr> </table></div></div> <br>Which of the following is the correct outcome of the SQL query:<br><div class='code'>SELECT STUDENT.name , ENROLLED.grade<br>FROM STUDENT, ENROLLED<br>WHERE STUDENT.sid = ENROLLED.sid AND ENROLLED.cid = ’15 -415 ’ AND ENROLLED.grade IN (’A’,’B’);</div>",
        "optionA": "Returns the name, grade of the students who took course ’15-4150 and got a grade’ A’ or ‘B’ in that course.",
        "optionB": "Returns the name, grade of the students who took the course ’15-4150 but didn’t get grade ‘A’ or ‘B’ in that course.",
        "optionC": "Error.",
        "optionD": "None of these.",
        "optionE": "",
        "optionF": "",
        "correct": "optionA"
    },
    {
        "question": "<br><div class='row'><div class='col-lg-6 col-md-12'><table class='table table-bordered'><tr><td colspan='5'><center>STUDENT table</center></td></tr><tr><th>SID</th><th>name</th><th>age</th><th>login</th><th>GPA</th></tr> <tr><td>53666</td><td>Kayne</td><td>A@cs</td><td>28</td><td>4.0</td></tr> <tr><td>53655</td><td>Tupac</td><td>B@cs</td><td>26</td><td>3.5</td></tr> <tr><td>53688</td><td>Bieber</td><td>C@cs</td><td>22</td><td>3.9</td></tr> </table> </div><div class='col-lg-6 col-md-12'> <table class='table table-bordered'><tr><td colspan='3'><center>ENDROLLED table</center></td></tr>  <tr><th>SID</th><th>CID</th><th>grade</th></tr> <tr><td>53666</td><td>15 − 415</td><td> C</td></tr> <tr><td>53688</td><td>15 − 721</td><td>A</td></tr><tr><td>53688</td><td>15 − 826</td><td>B</td></tr><tr><td>53655</td><td>15 − 415</td><td>C</td></tr><tr><td>53666</td><td>15 − 721</td><td>C</td></tr> </table></div></div> <br>Which of the following query will find all the unique students who have taken more than one course?",
        "optionA": "<div class='code'>SELECT DISTINCT e1.sid<br>FROM ENROLLED AS e1, ENROLLED AS e2<br>WHERE e1.sid != e2.sid AND e1.cid != e2.cid;</div>",
        "optionB": "<div class='code'>SELECT DISTINCT e1.sid<br>FROM ENROLLED AS e1, ENROLLED AS e2 <br>WHERE e1.sid = e2.sid AND e1.cid = e2.cid;</div>",
        "optionC": "<div class='code'>SELECT DISTINCT e1.sid<br>FROM ENROLLED AS e1, ENROLLED AS e2 <br>WHERE e1.sid != e2.sid AND e1.cid != e2.cid;</div>",
        "optionD": "<div class='code'>SELECT DISTINCT e1.sid <br>FROM ENROLLED AS e1 , ENROLLED AS e2 <br>WHERE e1.sid = e2.sid AND e1.cid != e2.cid;</div>",
        "optionE": "",
        "optionF": "",
        "correct": "optionD"
    },
    {
        "question": "<br><div class='row'><div class='col-lg-6 col-md-12'><table class='table table-bordered'><tr><td colspan='5'><center>STUDENT table</center></td></tr><tr><th>SID</th><th>name</th><th>age</th><th>login</th><th>GPA</th></tr> <tr><td>53666</td><td>Kayne</td><td>A@cs</td><td>28</td><td>4.0</td></tr> <tr><td>53655</td><td>Tupac</td><td>B@cs</td><td>26</td><td>3.5</td></tr> <tr><td>53688</td><td>Bieber</td><td>C@cs</td><td>22</td><td>3.9</td></tr> </table> </div><div class='col-lg-6 col-md-12'> <table class='table table-bordered'><tr><td colspan='3'><center>ENDROLLED table</center></td></tr>  <tr><th>SID</th><th>CID</th><th>grade</th></tr> <tr><td>53666</td><td>15 − 415</td><td> C</td></tr> <tr><td>53688</td><td>15 − 721</td><td>A</td></tr><tr><td>53688</td><td>15 − 826</td><td>B</td></tr><tr><td>53655</td><td>15 − 415</td><td>C</td></tr><tr><td>53666</td><td>15 − 721</td><td>C</td></tr> </table></div></div> <br>Which of the following statement will add a column F name to the STUDENT table?",
        "optionA": "<div class='code'>ALTER TABLE STUDENT ADD COLUMN (’F_name’ VARCHAR(20));</div>",
        "optionB": "<div class='code'>ALTER TABLE STUDENT ADD ’F_name’ VARCHAR(20);</div>",
        "optionC": "<div class='code'>ALTER TABLE STUDENT ADD (’F_name’ VARCHAR(20));</div>",
        "optionD": "<div class='code'>ALTER TABLE STUDENT ADD COLUMN (’F_name’);</div>",
        "optionE": "",
        "optionF": "",
        "correct": "optionB"
    },
    {
        "question": "<br><div class='row'><div class='col-lg-6 col-md-12'><table class='table table-bordered'><tr><td colspan='5'><center>STUDENT table</center></td></tr><tr><th>SID</th><th>name</th><th>age</th><th>login</th><th>GPA</th></tr> <tr><td>53666</td><td>Kayne</td><td>A@cs</td><td>28</td><td>4.0</td></tr> <tr><td>53655</td><td>Tupac</td><td>B@cs</td><td>26</td><td>3.5</td></tr> <tr><td>53688</td><td>Bieber</td><td>C@cs</td><td>22</td><td>3.9</td></tr> </table> </div><div class='col-lg-6 col-md-12'> <table class='table table-bordered'><tr><td colspan='3'><center>ENDROLLED table</center></td></tr>  <tr><th>SID</th><th>CID</th><th>grade</th></tr> <tr><td>53666</td><td>15 − 415</td><td> C</td></tr> <tr><td>53688</td><td>15 − 721</td><td>A</td></tr><tr><td>53688</td><td>15 − 826</td><td>B</td></tr><tr><td>53655</td><td>15 − 415</td><td>C</td></tr><tr><td>53666</td><td>15 − 721</td><td>C</td></tr> </table></div></div> <br>Which of the following query(s) will result in a successful insertion of a record in the STUDENT table?<br><div class='code'>INSERT INTO STUDENT (sid, name, login, age, gpa ) VALUES (53888, Drake, drake@cs, 29, 3.5);<br>INSERT INTO STUDENT VALUES (53888, Drake, drak@ecs, 29, 3.5)</div>",
        "optionA": "Both queries will insert the record successfully",
        "optionB": "Query 1 will insert the record successfully and Query 2 will not.",
        "optionC": "Query 2 will insert the record successfully and Query 1 will not.",
        "optionD": "Both queries will not be able to insert the record successfully.",
        "optionE": "",
        "optionF": "",
        "correct": "optionA"
    },
    {
        "question": "<br><div class='row'><div class='col-lg-6 col-md-12'><table class='table table-bordered'><tr><td colspan='5'><center>STUDENT table</center></td></tr><tr><th>SID</th><th>name</th><th>age</th><th>login</th><th>GPA</th></tr> <tr><td>53666</td><td>Kayne</td><td>A@cs</td><td>28</td><td>4.0</td></tr> <tr><td>53655</td><td>Tupac</td><td>B@cs</td><td>26</td><td>3.5</td></tr> <tr><td>53688</td><td>Bieber</td><td>C@cs</td><td>22</td><td>3.9</td></tr> </table> </div><div class='col-lg-6 col-md-12'> <table class='table table-bordered'><tr><td colspan='3'><center>ENDROLLED table</center></td></tr>  <tr><th>SID</th><th>CID</th><th>grade</th></tr> <tr><td>53666</td><td>15 − 415</td><td> C</td></tr> <tr><td>53688</td><td>15 − 721</td><td>A</td></tr><tr><td>53688</td><td>15 − 826</td><td>B</td></tr><tr><td>53655</td><td>15 − 415</td><td>C</td></tr><tr><td>53666</td><td>15 − 721</td><td>C</td></tr> </table></div></div> <br> ‘Sid’ in “ENROLLED” table is ‘Foreign Key’ referenced by ‘Sid’ in “STUDENT” table.<br>You want to insert a record into the ENROLLED table, which of the following option(s) will insert a row in ENROLLED table successfully?<br><div class='code'>INSERT INTO ENROLLED VALUES (53667, ’15 -420’, ’C’);<br>INSERT INTO ENROLLED VALUES (53666, ’15 -421’, ’C’);<br>INSERT INTO ENROLLED VALUES (53667, ’15 -415’, ’C’);<br>INSERT INTO ENROLLED VALUES (53666, ’15 -415’, ’C’);</div>",
        "optionA": "1 and 3.",
        "optionB": "Only 3.",
        "optionC": "2 and 4.",
        "optionD": "Only 4.",
        "optionE": "",
        "optionF": "",
        "correct": "optionC"
    },
    {
        "question": "<br><div class='row'><div class='col-lg-6 col-md-12'><table class='table table-bordered'><tr><td colspan='5'><center>STUDENT table</center></td></tr><tr><th>SID</th><th>name</th><th>age</th><th>login</th><th>GPA</th></tr> <tr><td>53666</td><td>Kayne</td><td>A@cs</td><td>28</td><td>4.0</td></tr> <tr><td>53655</td><td>Tupac</td><td>B@cs</td><td>26</td><td>3.5</td></tr> <tr><td>53688</td><td>Bieber</td><td>C@cs</td><td>22</td><td>3.9</td></tr> </table> </div><div class='col-lg-6 col-md-12'> <table class='table table-bordered'><tr><td colspan='3'><center>ENDROLLED table</center></td></tr>  <tr><th>SID</th><th>CID</th><th>grade</th></tr> <tr><td>53666</td><td>15 − 415</td><td> C</td></tr> <tr><td>53688</td><td>15 − 721</td><td>A</td></tr><tr><td>53688</td><td>15 − 826</td><td>B</td></tr><tr><td>53655</td><td>15 − 415</td><td>C</td></tr><tr><td>53666</td><td>15 − 721</td><td>C</td></tr> </table></div></div> <br>Which of the following option is correct? Consider the following queries:<br><div class='code'>SELECT name FROM ENROLLED LEFT OUTER JOIN STUDENT ON STUDENT.sid = ENROLLED.sid;<br>SELECT name FROM STUDENT LEFT OUTER JOIN ENROLLED ON STUDENT.sid = ENROLLED.sid;</div>",
        "optionA": "Queries 1 and 2 will give the same results.",
        "optionB": "Queries 1 and 2 will give different results",
        "optionC": "Query 1 will produce an error and Query 2 will run successfully.",
        "optionD": "Query 2 will produce an error and Query 1 will run successfully.",
        "optionE": "",
        "optionF": "",
        "correct": "optionA"
    },
    {
        "question": "<br><div class='row'><div class='col-lg-6 col-md-12'><table class='table table-bordered'><tr><td colspan='5'><center>STUDENT table</center></td></tr><tr><th>SID</th><th>name</th><th>age</th><th>login</th><th>GPA</th></tr> <tr><td>53666</td><td>Kayne</td><td>A@cs</td><td>28</td><td>4.0</td></tr> <tr><td>53655</td><td>Tupac</td><td>B@cs</td><td>26</td><td>3.5</td></tr> <tr><td>53688</td><td>Bieber</td><td>C@cs</td><td>22</td><td>3.9</td></tr> </table> </div><div class='col-lg-6 col-md-12'> <table class='table table-bordered'><tr><td colspan='3'><center>ENDROLLED table</center></td></tr>  <tr><th>SID</th><th>CID</th><th>grade</th></tr> <tr><td>53666</td><td>15 − 415</td><td> C</td></tr> <tr><td>53688</td><td>15 − 721</td><td>A</td></tr><tr><td>53688</td><td>15 − 826</td><td>B</td></tr><tr><td>53655</td><td>15 − 415</td><td>C</td></tr><tr><td>53666</td><td>15 − 721</td><td>C</td></tr> </table></div></div> <br>Which of the following statements will modify the data type of “Sid” column in ENROLLED table? (There is no Foreign Key relationship between tables STUDENT and ENROLLED).",
        "optionA": "<div class='code'>ALTER TABLE ENROLLED MODIFY (sid VARCHAR (100));</div>",
        "optionB": "<div class='code'>ALTER TABLE ENROLLED MODIFY sid VARCHAR (100);</div>",
        "optionC": "<div class='code'>ALTER TABLE ENROLLED MODIFY COLUMN (sid VARCHAR (100));</div>",
        "optionD": "<div class='code'>ALTER TABLE ENROLLED MODIFY ATTRIBUTE (sid VARCHAR (100));</div>",
        "optionE": "",
        "optionF": "",
        "correct": "optionA"
    },
    {
        "question": "<br><div class='row'><div class='col-lg-6 col-md-12'><table class='table table-bordered'><tr><td colspan='5'><center>STUDENT table</center></td></tr><tr><th>SID</th><th>name</th><th>age</th><th>login</th><th>GPA</th></tr> <tr><td>53666</td><td>Kayne</td><td>A@cs</td><td>28</td><td>4.0</td></tr> <tr><td>53655</td><td>Tupac</td><td>B@cs</td><td>26</td><td>3.5</td></tr> <tr><td>53688</td><td>Bieber</td><td>C@cs</td><td>22</td><td>3.9</td></tr> </table> </div><div class='col-lg-6 col-md-12'> <table class='table table-bordered'><tr><td colspan='3'><center>ENDROLLED table</center></td></tr>  <tr><th>SID</th><th>CID</th><th>grade</th></tr> <tr><td>53666</td><td>15 − 415</td><td> C</td></tr> <tr><td>53688</td><td>15 − 721</td><td>A</td></tr><tr><td>53688</td><td>15 − 826</td><td>B</td></tr><tr><td>53655</td><td>15 − 415</td><td>C</td></tr><tr><td>53666</td><td>15 − 721</td><td>C</td></tr> </table></div></div> <br>Which of the following statement will remove the ‘Sid’ column from the ENROLLED table? (There is no Foreign Key relationship between tables STUDENT and ENROLLED).",
        "optionA": "<div class='code'>ALTER TABLE ENROLLED DROP (sid varchar (10));</div>",
        "optionB": "<div class='code'>ALTER TABLE ENROLLED DROP COLUMN (sid VARCHAR (10));</div>",
        "optionC": "<div class='code'>ALTER TABLE ENROLLED DROP COLUMN sid;</div>",
        "optionD": "<div class='code'>ALTER TABLE ENROLLED MODIFY (sid);</div>",
        "optionE": "",
        "optionF": "",
        "correct": "optionC"
    },
    {
        "question": "Which of the following command(s) is / are related to transaction control in SQL?",
        "optionA": "ROLLBACK",
        "optionB": "COMMIT",
        "optionC": "SAVEPOINT",
        "optionD": "All of the above.",
        "optionE": "",
        "optionF": "",
        "correct": "optionD"
    },
    {
        "question": "Which of the following is true for a Primary Key?",
        "optionA": "It can take a value more than once.",
        "optionB": "It can take null values.",
        "optionC": "It can’t take null values.",
        "optionD": "None of these",
        "optionE": "",
        "optionF": "",
        "correct": "optionC"
    },
    {
        "question": "What is the difference between a Primary Key and a Unique Key?",
        "optionA": "Primary key cannot be a date variable whereas Unique Key can be.",
        "optionB": "You can have only one Primary Key whereas you can have multiple Unique Keys.",
        "optionC": "Primary key can take null values but Unique Key cannot null values.",
        "optionD": "None of these",
        "optionE": "",
        "optionF": "",
        "correct": "optionB"
    },
    {
        "question": "Which of the following statement(s) is/are true for UPDATE in SQL?<br>(a) You can update only a single table using UPDATE command.<br>(b) You can update multiple tables using UPDATE command.<br>(c) UPDATE command, you must list what columns to update with their new values (separated by commas).<br>(d) To update multiple targeted records, you need to specify UPDATE command using the WHERE clause.<br>Select the correct option:",
        "optionA": "1, 3 and 4.",
        "optionB": "2, 3 and 4.",
        "optionC": "3 and 4.",
        "optionD": "Only 1.",
        "optionE": "",
        "optionF": "",
        "correct": "optionA"
    },
    {
        "question": "Which of the following statement is correct about ‘CREATE TABLE’ command while creating a table?",
        "optionA": "We need to assign a data-type to each column",
        "optionB": "We have flexibility in SQL so we can assign a data-type to column even after creating a table.",
        "optionC": "It is mandatory to insert at least a single row while creating a table.",
        "optionD": "None of these.",
        "optionE": "",
        "optionF": "",
        "correct": "optionA"
    },
    {
        "question": "Which of the following are the synonyms for ‘column’ and ‘row’ of a table?<br>(a) Row = [Tuple, Record]<br>(b) Column = [Field, Attribute]<br>(c) Row = [Tuple, Attribute]<br>(d) Columns = [Field, Record]<br>Select the correct option:",
        "optionA": "1 and 2.",
        "optionB": "3 and 4.",
        "optionC": "Only 1.",
        "optionD": "Only 2.",
        "optionE": "",
        "optionF": "",
        "correct": "optionA"
    },
    {
        "question": "Which of the following operator is used for comparing ‘NULL’ values in SQL?",
        "optionA": "Equal",
        "optionB": "IS",
        "optionC": "IN",
        "optionD": "None of above.",
        "optionE": "",
        "optionF": "",
        "correct": "optionB"
    },
    {
        "question": "Which of the following statement(s) is/are true about “HAVING” and “WHERE” clause in SQL?<br>(a) ”WHERE” is always used before “GROUP BY” and HAVING after “GROUP BY”<br>(b) ”WHERE” is always used after “GROUP BY” and “HAVING” before “GROUP BY”<br>(c) “WHERE” is used to filter rows but “HAVING” is used to filter groups<br>(d) “WHERE” is used to filter groups but “HAVING” is used to filter rows<br>Select the correct option:",
        "optionA": "1 and 3.",
        "optionB": "1 and 4.",
        "optionC": "2 and 3.",
        "optionD": "2 and 4.",
        "optionE": "",
        "optionF": "",
        "correct": "optionA"
    },
    {
        "question": "Identify, which of the following column ‘A’ or ‘C’ given in the below table is a ‘Primary Key’ or ‘ForeignKey’? (We have defined ‘Foreign Key’ and ‘Primary Key’ in a single table).<br><table class='table table-bordered'><tr><th>A</th><th>C</th></tr><tr><td>2</td><td>4</td></tr><tr><td>3 </td><td>4</td></tr><tr><td>4 </td><td>3</td></tr><tr><td>5 </td><td>2</td></tr><tr><td>7 </td><td>2</td></tr><tr><td>9 </td><td>5</td></tr><tr><td>6 </td><td>4</td></tr></table>",
        "optionA": "Column ‘A’ is Foreign Key and Column ‘C’ is ‘Primary Key’.",
        "optionB": "Column ‘C’ is Foreign Key and Column ‘A’ is ‘Primary Key’.",
        "optionC": "Both can be ‘Primary Key’.",
        "optionD": "Based on the above table, we cannot tell which column is ‘Primary Key’ and which is ‘Foreign Key’.",
        "optionE": "",
        "optionF": "",
        "correct": "optionB"
    },

    {
        "question": "What are the tuples additionally deleted to preserve reference integrity when the rows (2,4) are deleted from the above table. Suppose you are using ‘ON DELETE CASCADE’<br><table class='table table-bordered'><tr><th>A</th><th>C</th></tr><tr><td>2</td><td>4</td></tr><tr><td>3 </td><td>4</td></tr><tr><td>4 </td><td>3</td></tr><tr><td>5 </td><td>2</td></tr><tr><td>7 </td><td>2</td></tr><tr><td>9 </td><td>5</td></tr><tr><td>6 </td><td>4</td></tr></table><br>Note: We  have defined ‘Foreign Key’ and ‘Primary Key’ in a single table",
        "optionA": "(5, 2),(7, 2),(9, 5).",
        "optionB": "(5, 2),(7, 2).",
        "optionC": "(5, 2),(7, 2),(9, 5),(3, 4).",
        "optionD": "(5, 2),(7, 2),(9, 5),(6, 4).",
        "optionE": "",
        "optionF": "",
        "correct": "optionA"
    },
    {
        "question": "Suppose you are given a table/relation “EMPLOYEE” which has two columns (‘Name’ and ‘Salary’). The Salary column in this table has some NULL values. Now, I want to find out the records which have null values.<br><table class='table table-bordered'><tr><th>Name</th><th>Salary</th></tr><tr><td>Saurav</td><td> Null</td></tr><tr><td>Ankit </td><td>1000</td></tr><tr><td>Faizan</td><td> 2000</td></tr><tr><td>Sunil </td><td>3000</td></tr><tr><td>Kunal</td><td> 4000</td></tr></table> <br> What will be the output for the following queries?<br> <div class='code'>SELECT *<br>FROM EMPLOYEE<br>WHERE Salary <> NULL;<br><br>SELECT *<br>FROM EMPLOYEE<br>WHERE Salary = NULL;<br></div>",
        "optionA": "Query 1 will give last 4 rows as output (excluding null value).",
        "optionB": "Query 2 will give first row as output (only record containing null value).",
        "optionC": "Query 1 and Query 2 both will give the same result.",
        "optionD": "Can’t say.",
        "optionE": "",
        "optionF": "",
        "correct": "optionC"
    },
    {
        "question": "What is the difference between TRUNCATE, DELETE and DROP? Which of the following statement(s) is/are correct?<br>(a) DELETE operation can be rolled back but TRUNCATE and DROP operations cannot be rolled back.<br>(b) DELETE operation cannot be rolled back but TRUNCATE and DROP operations can be rolled back.<br>(c) DELETE is an example of DML (Data Manipulation Language) but remaining are the examples of DDL (Data Definition Language).<br>(d) All are an example of DDL.<br>Select the correct option:",
        "optionA": "1 and 3.",
        "optionB": "2 and 3.",
        "optionC": "1 and 4.",
        "optionD": "2 and 4.",
        "optionE": "None of the above.",
        "optionF": "",
        "correct": "optionA"
    },
    {
        "question": "Tables A, B have three columns (namely: ‘id’, ‘age’, ‘name’) each. These tables have no NULL values and there are 100 records in each of the table. Here are two queries based on these two tables ‘A’ and ‘B’:<div class='code'>SELECT A.id<br>FROM A<br>WHERE A. age > ALL ( SELECT B.age FROM B WHERE B. name = ’Ankit ’);<br><br>SELECT A.id<br>FROM A<br>WHERE A. age > ANY ( SELECT B.age FROM B WHERE B. name = ’Ankit’);</div><br>Which of the following statement is correct for the output of each query?",
        "optionA": "The number of tuples in the output of Query 1 will be more than or equal to the output of Query 2.",
        "optionB": "The number of tuples in the output of Query 1 will be equal to the output of Query 2.",
        "optionC": "The number of tuples in the output Query 1 will be less than or equal to the output of Query 2",
        "optionD": "Can’t say.",
        "optionE": "",
        "optionF": "",
        "correct": "optionC"
    },
    {
        "question": "Suppose you want to compare three keys (‘Primary Key’, ‘Super Key’ and ‘Candidate Key’) in a database. Which of the following option(s) is/are correct?<br>(a) Minimal Super Key is a Candidate Key.<br>(b) Only one Candidate Key can be Primary Key.<br>(c) All Super Keys can be a Candidate Key.<br>(d) We cannot find “Primary Key” from “Candidate Key”.",
        "optionA": "1 and 2.",
        "optionB": "2 and 3.",
        "optionC": "1 and 3",
        "optionD": "2 and 4.",
        "optionE": "1, 2 and 3.",
        "optionF": "",
        "correct": "optionA"
    },
    {
        "question": "Consider a relation R with the schema R (A, B, C, D, E, F) with a set of functional dependencies F as follows:<br>F = {AB → C, BC → AD, D → E, CF → B}<br>Which of the following will be the output of DA^+? (For any X, X^+ is closure of X).",
        "optionA": "DA",
        "optionB": "DAE",
        "optionC": "ABCD",
        "optionD": "ABCDEF",
        "optionE": "",
        "optionF": "",
        "correct": "optionB"
    },
    {
        "question": "Suppose you have a table “Loan Records”:<br><table class='table table-bordered'><tr><th>Borrower</th><th>Bank_Manager</th><th>Loan_Amount</th></tr><tr><td>Ramesh</td><td>Sunderajan</td><td> 10000.00</td></tr><tr><td>Sumesh </td><td>Ramgopal </td><td>5000.00</td></tr><tr><td>Mamesh </td><td>Sunderajan </td><td>7000.00</table><br> What is the output of the following SQL query:<br><div class='code'>SELECT Count (*)<br>FROM (<br>( SELECT Borrower , Bank_Manager FROM Loan_Records ) AS S<br>NATURAL JOIN<br>( SELECT Bank_Manager , Loan_Amount FROM Loan_Records ) AS T<br>);</div>",
        "optionA": "4",
        "optionB": "5",
        "optionC": "8",
        "optionD": "10",
        "optionE": "",
        "optionF": "",
        "correct": "optionB"
    },
    {
        "question": "Is “SELECT” operation in SQL equivalent to “PROJECT” operation in relational algebra?",
        "optionA": "Yes, both are equivalent in all the cases.",
        "optionB": "No, both are not equivalent.",
        "optionC": "",
        "optionD": "",
        "optionE": "",
        "optionF": "",
        "correct": "optionB"
    },
    {
        "question": "<br><table class='table table-bordered'><tr><td colspan='4'><center>IV1 table</center></td></tr><tr><th>Name </th><th>Salary </th><th>Company</th><th> Designation</th></tr><tr><td>Saurav </td><td>1000 </td><td>AV1 </td><td>Junior Data Scientist</td></tr><tr><td>Ankit </td><td>800 </td><td>AV1 </td><td>Data Scientist</td></tr><tr><td>Sunil </td><td>1200 </td><td>AV2 </td><td>Senior Manager</td></tr><tr><td>Kunal </td><td>1400</td><td> AV2 </td><td>CEO</td></tr><tr><td>Deepak </td><td>1100 </td><td>AV3 </td><td>Data Entry Operator</td></tr><tr><td>Swati </td><td>1200 </td><td>AV3 </td><td>BDE</td></tr><tr><td>Falzan </td><td>900 </td><td>AV1 </td><td>Deep Learning Expert</td></tr></table><br>What will be the output of following query:<br><div class='code'>SELECT Name FROM AV1 WHERE Name LIKE ’%a%’;</div>",
        "optionA": "Saurav, Ankit, Kunal, Deepak, Swati, Faizan.",
        "optionB": "Saurav, Kunal, Deepak, Swati, Faizan.",
        "optionC": "Kunal, Deepak, Swati, Faizan.",
        "optionD": "None of above.",
        "optionE": "",
        "optionF": "",
        "correct": "optionB"
    },
    {
        "question": "<br><table class='table table-bordered'><tr><td colspan='4'><center>IV1 table</center></td></tr><tr><th>Name </th><th>Salary </th><th>Company</th><th> Designation</th></tr><tr><td>Saurav </td><td>1000 </td><td>AV1 </td><td>Junior Data Scientist</td></tr><tr><td>Ankit </td><td>800 </td><td>AV1 </td><td>Data Scientist</td></tr><tr><td>Sunil </td><td>1200 </td><td>AV2 </td><td>Senior Manager</td></tr><tr><td>Kunal </td><td>1400</td><td> AV2 </td><td>CEO</td></tr><tr><td>Deepak </td><td>1100 </td><td>AV3 </td><td>Data Entry Operator</td></tr><tr><td>Swati </td><td>1200 </td><td>AV3 </td><td>BDE</td></tr><tr><td>Falzan </td><td>900 </td><td>AV1 </td><td>Deep Learning Expert</td></tr></table><br>What will be the output of following query:<br><div class='code'>SELECT Name FROM AV1 WHERE Name LIKE ’% ______ %’;</div>",
        "optionA": "It will return names where number of characters in names are greater than or equals to 6",
        "optionB": "It will return names where number of characters in names are greater than 6.",
        "optionC": "It will return names where number of characters in names are less than or equals to 6",
        "optionD": "It will give an error.",
        "optionE": "",
        "optionF": "",
        "correct": "optionA"
    },
    {
        "question": "Which of the following is true for TRUNCATE in SQL?",
        "optionA": "It is usually slower than DELETE command.",
        "optionB": "It is usually faster than DELETE command.",
        "optionC": "There is no comparison between DELETE and TRUNCATE.",
        "optionD": "TRUNCATE command can be rolled back.",
        "optionE": "",
        "optionF": "",
        "correct": "optionB"
    },
    {
        "question": "<br><table class='table table-bordered'><tr><td colspan='4'><center>IV1 table</center></td></tr><tr><th>Name </th><th>Salary </th><th>Company</th><th> Designation</th></tr><tr><td>Saurav </td><td>1000 </td><td>AV1 </td><td>Junior Data Scientist</td></tr><tr><td>Ankit </td><td>800 </td><td>AV1 </td><td>Data Scientist</td></tr><tr><td>Sunil </td><td>1200 </td><td>AV2 </td><td>Senior Manager</td></tr><tr><td>Kunal </td><td>1400</td><td> AV2 </td><td>CEO</td></tr><tr><td>Deepak </td><td>1100 </td><td>AV3 </td><td>Data Entry Operator</td></tr><tr><td>Swati </td><td>1200 </td><td>AV3 </td><td>BDE</td></tr><tr><td>Falzan </td><td>900 </td><td>AV1 </td><td>Deep Learning Expert</td></tr></table><br>What will be the output of the below query:<br><div class='code'>SELECT Company , AVG ( Salary )<br>FROM AV1<br>HAVING AVG( Salary ) > 1200<br>GROUP BY Company<br>WHERE Salary > 1000;</div>",
        "optionA": "<table class='table table-bordered'><tr><th>Company</th><th>AVG</th></tr><tr><td>AV2 </td><td>1300</td></tr></table>",
        "optionB": "<table class='table table-bordered'><tr><th>Company</th><th>AVG</th></tr><tr><td>AV3 </td><td>1150</td></tr><tr><td>AV2 </td><td>1300</td></tr></table>",
        "optionC": "<table class='table table-bordered'><tr><th>Company</th><th>AVG</th></tr><tr><td>AV3 </td><td>1200</td></tr><tr><td>AV2 </td><td>1300</td></tr></table>",
        "optionD": "None of these.",
        "optionE": "",
        "optionF": "",
        "correct": "optionD"
    },
    {
        "question": "<br><table class='table table-bordered'><tr><td colspan='4'><center>IV1 table</center></td></tr><tr><th>Name </th><th>Salary </th><th>Company</th><th> Designation</th></tr><tr><td>Saurav </td><td>1000 </td><td>AV1 </td><td>Junior Data Scientist</td></tr><tr><td>Ankit </td><td>800 </td><td>AV1 </td><td>Data Scientist</td></tr><tr><td>Sunil </td><td>1200 </td><td>AV2 </td><td>Senior Manager</td></tr><tr><td>Kunal </td><td>1400</td><td> AV2 </td><td>CEO</td></tr><tr><td>Deepak </td><td>1100 </td><td>AV3 </td><td>Data Entry Operator</td></tr><tr><td>Swati </td><td>1200 </td><td>AV3 </td><td>BDE</td></tr><tr><td>Falzan </td><td>900 </td><td>AV1 </td><td>Deep Learning Expert</td></tr></table><br> What will be the output for the query:<br> <div class='code'>SELECT MAX( Salary )<br>FROM AV1<br>WHERE Salary < ( SELECT MAX( Salary ) FROM AV1);<br><br>WITH S AS ( SELECT Salary , ROW_NUMBER () OVER ( ORDER BY Salary DESC ) AS RowNum FROM AV1)<br>SELECT Salary<br>FROM S<br>WHERE RowNum = 2;</div>",
        "optionA": "Query 1 output = 1200 and Query 2 output = 1200",
        "optionB": "Query 1 output = 1200 and Query 2 output = 1400",
        "optionC": "Query 1 output = 1400 and Query 2 output = 1200",
        "optionD": "Query 1 output = 1400 and Query 2 output = 1400",
        "optionE": "",
        "optionF": "",
        "correct": "optionA"
    },
    {
        "question": "Consider the following relational schema:<br><div class='code'>Students ( rollno : INTEGER , sname : STRING )<br>Courses ( courseno : INTEGER , cname : STRING )<br>Registration ( rollno : INTEGER , courseno : INTEGER , percent : REAL )</div><br>Which of the following query would be able to find the unique names of all students having score more than 90% in the courseno 107?",
        "optionA": "<div class='code'>SELECT DISTINCT S.sname<br>FROM Students AS S, Registration AS R <br>WHERE R.rollno = S.rollno AND R.courseno = 107 AND R.percent > 90;</div>",
        "optionB": "<div class='code'>SELECT UNIQUE S.sname<br>FROM Students AS S, Registration AS R <br>WHERE R.rollno = S.rollno AND R.courseno = 107 AND R.percent > 90;</div>",
        "optionC": "<div class='code'>SELECT sname<br>FROM Students AS S, Registration AS R<br>WHERE R.rollno = S.rollno AND R.courseno = 107 AND R.percent > 90;</div>",
        "optionD": "None of these.",
        "optionE": "",
        "optionF": "",
        "correct": "optionA"
    },
    {
        "question": "Consider the relation T1 (A, B) in which (A, B) is the Primary Key and the relation T2 (A, C) where A is the Primary Key. Assume there are no NULL values and no Foreign Keys or Integrity Constraints. Which of the following option is correct related to following queries?<br><div class='code'>SELECT A <br>FROM T1<br>WHERE A IN ( SELECT A FROM T2 ) ;<br><br>SELECT A<br>FROM T2<br>WHERE A IN ( SELECT A FROM T1 ) ;</div>",
        "optionA": "Both queries will definitely give the same result.",
        "optionB": "Both queries may give the same result.",
        "optionC": "Both queries will definitely give a different result.",
        "optionD": "None of these.",
        "optionE": "",
        "optionF": "",
        "correct": "optionB"
    },
    {
        "question": "Which of the following option is correct about following queries?<br><div class='code'>SELECT emp.id , department.id<br>FROM emp NATURAL JOIN department;<br><br>SELECT emp.id , department.id<br>FROM department NATURAL JOIN emp;</div>",
        "optionA": "Both queries will give same outputs.",
        "optionB": "Both queries will give different output.",
        "optionC": "Need table structure.",
        "optionD": "None of these.",
        "optionE": "",
        "optionF": "",
        "correct": "optionA"
    },
    {
        "question": "Indexing is useful in a database for fast searching. Generally, B-tree is used for indexing in a database. Now, you want to use Binary Search Tree instead of B-tree. Suppose there are numbers between 1 and 100 and you want to search the number 35 using Binary Search Tree algorithm. Which of the following sequences CANNOT be the sequence for the numbers examined?",
        "optionA": "10, 75, 64, 43, 60, 57, 55",
        "optionB": "90, 12, 68, 34, 62, 45, 55",
        "optionC": "9, 85, 47, 68, 43, 57, 55",
        "optionD": "79, 14, 72, 56, 16, 53, 55",
        "optionE": "",
        "optionF": "",
        "correct": "optionC"
    },
    {
        "question": "If an index scan is replaced by sequential scan in SQL, then what will happen? (Number of observations is equal to 1 million).",
        "optionA": "Execution will be faster.",
        "optionB": "Execution will be slower.",
        "optionC": "Execution will not be affected.",
        "optionD": "None of these.",
        "optionE": "",
        "optionF": "",
        "correct": "optionB"
    },
    {
        "question": "Suppose you have a table ‘Employee’. In Employee table, you have a column named Salary. Now, you applied Query 1 on Employee table:<br><div class='code'>SELECT *<br>FROM Employee<br>WHERE ( Salary * 100) > 5000;</div> After that, you created an index on Salary columns and then you re-run the Query 2 (same as Query 1): <div class='code'>SELECT *<br> FROM Employee<br> WHERE ( Salary * 100) > 5000;</div>Here, Query 1 is taking T1 time and Query 2 is taking T2 time. Which of the following is true for the queries time?",
        "optionA": "T1 > T2",
        "optionB": "T2 > T1",
        "optionC": "T1 ∼ T2",
        "optionD": "Can’t say.",
        "optionE": "",
        "optionF": "",
        "correct": "optionC"
    },
    {
        "question": "What is true for ‘View’ in SQL?<br>(a) It can help in providing security.<br>(b) It can be used for hiding complexity.<br>(c) If there are more than one table involved in the view, we cannot perform (Data Manipulation Language) DML queries.<br>(d) When you drop the base table, view becomes inactive.<br>Select the correct option:",
        "optionA": "1 and 3.",
        "optionB": "2 and 4.",
        "optionC": "1, 3 and 4.",
        "optionD": "All of these.",
        "optionE": "",
        "optionF": "",
        "correct": "optionD"
    },
    {
        "question": "Suppose I created a table called ”Avian” using below SQL query:<br><div class='code'>CREATE TABLE Avian ( Emp_id SERIAL PRIMARY KEY , Name VARCHAR );</div><br>Now, I want to insert some records in the table Avian:<br><div class='code'>INSERT INTO Avian ( Name ) VALUES (\"FRAZY\");<br>INSERT INTO Avian ( Name ) VALUES (\"ANKIT\");<br>INSERT INTO Avian ( Name ) VALUES (\"SUNIL\");<br>INSERT INTO Avian ( Name ) VALUES (\"SAURAV\");</div>Which of the following will be the output of the query:<br><div class='code'>SELECT * FROM Avian;</div>",
        "optionA": "<table class='table table-bordered'><tr><th>Emp_id</th><th>Name</th></tr><tr><td>1</td><td> FRAZY</td></tr><tr><td>2 </td><td>ANKIT</td></tr><tr><td>3 </td><td>SUNIL</td></tr><tr><td>4 </td><td>SAURAV</td></tr></table>",
        "optionB": "<table class='table table-bordered'><tr><th>Emp_id</th><th>Name</th></tr><tr><td> </td><td> FRAZY</td></tr><tr><td> </td><td>ANKIT</td></tr><tr><td> </td><td>SUNIL</td></tr><tr><td> </td><td>SAURAV</td></tr></table>",
        "optionC": "Error.",
        "optionD": "None of these.",
        "optionE": "",
        "optionF": "",
        "correct": "optionA"
    }
]
